{"version":3,"sources":["elements/Git/GitContent.jsx","elements/Window/BodyContent.jsx"],"names":["Wrapper","styled","SimpleBarReact","theme","scrollbarThumb","bodyFont1","bodyFont2","darken","bodyFont3","bodyFont4","bodyFont5","easterEgg","GitContent","useState","data","setData","useEffect","axios","get","then","res","sort","a","b","x","stargazers_count","y","response","mappedData","name","description","url","stars","map","item","html_url","spaceList","commandList","lengthList","length","max","Math","Array","join","getSpaces","forEach","idx","dangerouslySetInnerHTML","__html","div","bodyBorder","BodyContent","props","children"],"mappings":"8MASMA,EAAUC,YAAOC,IAAPD,CAAH,m6BAISE,IAAMC,eAGlBD,IAAME,UAWLF,IAAME,UAGNF,IAAMG,UAGNH,IAAMG,UAAUC,OAAO,KAClBJ,IAAME,UAGXF,IAAMK,UAGNL,IAAMM,UAGNN,IAAMO,UAGDP,IAAMQ,UAeXR,IAAMM,WAmFFG,UAnEI,WAClB,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAqDA,OApDAC,qBAAU,WACTC,IACEC,IAAI,2DACJC,MAAK,SAAAC,GACL,IAAIN,EAAOM,EAAIN,KAAKO,MAAK,SAACC,EAAGC,GAC5B,IAAIC,EAAIF,EAAEG,iBACNC,EAAIH,EAAEE,iBACV,OAAOD,EAAIE,GAAK,EAAIF,EAAIE,EAAI,EAAI,KAE7BC,EAAW,GAeXC,EAAU,UAdH,CACV,CACCC,KAAM,OACNC,YAAa,cACbC,IAAK,MACLC,MAAO,SAER,CACCH,KAAM,GACNC,YAAa,GACbC,IAAK,GACLC,MAAO,KAGK,YAEVlB,EAAKmB,KAAI,SAAAC,GACX,MAAO,CACNL,KAAMK,EAAKL,KACXC,YAAaI,EAAKJ,YAClBC,IAAKG,EAAKC,SACVH,MAAOE,EAAKT,uBAIXW,EAjDU,SAAAC,GACjB,IACIC,EAAaD,EAAYJ,KAAI,SAAAC,GAChC,OAAOA,EAAKL,KAAKU,UAGdC,EAAMC,KAAKD,IAAL,MAAAC,KAAI,YAAQH,IACtB,OAAOD,EAAYJ,KAAI,SAAAC,GACtB,OAAOQ,MAAMF,EAAMN,EAAKL,KAAKU,OAAS,GAAGI,KAAK,KAP3B,QAgDDC,CAAUhB,GAC1BA,EAAWiB,SAAQ,SAACX,EAAMY,GACzBnB,GAAQ,uBACC,IAARmB,GAAA,SADO,sCAEsBZ,EAAKH,IAF3B,aAGPG,EAAKL,KAHE,sBAIMO,EAAUU,GAJhB,wBAKC,IAARA,GAAA,SALO,aAOQ,IAAfZ,EAAKF,MAAc,IAAME,EAAKF,MAPvB,iCAQyB,IAARc,GAAA,SARjB,aASPZ,EAAKJ,YAAcI,EAAKJ,YAAc,GAT/B,gBAYTf,EAAQY,QAER,IAEF,cAAC,IAAD,UACC,cAAC3B,EAAD,UACC,qBACC+C,wBAAyB,CACxBC,OAAQlC,W,yECnIRd,EAAUC,IAAOgD,IAAV,mLAOQ9C,IAAM+C,YAOZC,IAJK,SAAAC,GACnB,OAAO,cAACpD,EAAD,UAAUoD,EAAMC","file":"static/js/7.158b2988.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n//eslint-disable-next-line\nimport styled from \"styled-components\";\nimport BodyContent from \"@elements/Window/BodyContent\";\nimport SimpleBarReact from \"simplebar-react\";\nimport \"simplebar/src/simplebar.css\";\nimport axios from \"axios\";\nimport theme from \"@styles/theme\";\n\nconst Wrapper = styled(SimpleBarReact)`\n\tfont-family: \"Hack\", monospace;\n\t.simplebar-scrollbar:before {\n\t\tborder-radius: 10px;\n\t\tbackground-color: ${theme.scrollbarThumb};\n\t}\n\toverflow: auto;\n\tcolor: ${theme.bodyFont1};\n\theight: 100%;\n\twidth: 100%;\n\tpadding: 1rem;\n\tmax-height: 80vh;\n\ta {\n\t\tcolor: inherit;\n\t\tbackground: inherit;\n\t\ttext-decoration: none;\n\t}\n\t.style1 {\n\t\tcolor: ${theme.bodyFont1};\n\t}\n\t.style2 {\n\t\tcolor: ${theme.bodyFont2};\n\t}\n\t.style3 {\n\t\tcolor: ${theme.bodyFont2.darken(0.75)};\n\t\tbackground: ${theme.bodyFont1};\n\t}\n\t.style4 {\n\t\tcolor: ${theme.bodyFont3};\n\t}\n\t.style5 {\n\t\tcolor: ${theme.bodyFont4};\n\t}\n\t.style6 {\n\t\tcolor: ${theme.bodyFont5};\n\t}\n\t.style7 {\n\t\tbackground: ${theme.easterEgg};\n\t\tbackground-size: 1800% 1800%;\n\t\tanimation: rainbow 15s ease infinite;\n\n\t\t@keyframes rainbow {\n\t\t\t0% {\n\t\t\t\tbackground-position: 0% 82%;\n\t\t\t}\n\t\t\t50% {\n\t\t\t\tbackground-position: 100% 19%;\n\t\t\t}\n\t\t\t100% {\n\t\t\t\tbackground-position: 0% 82%;\n\t\t\t}\n\t\t}\n\t\tcolor: ${theme.bodyFont4};\n\t}\n`;\n\nconst getSpaces = commandList => {\n\tlet defaultSpaces = \"\\t\";\n\tlet lengthList = commandList.map(item => {\n\t\treturn item.name.length;\n\t});\n\t// console.log(commandList)\n\tlet max = Math.max(...lengthList);\n\treturn commandList.map(item => {\n\t\treturn Array(max - item.name.length + 1).join(\" \") + defaultSpaces;\n\t});\n};\n\nconst GitContent = () => {\n\tconst [data, setData] = useState();\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\"https://api.github.com/users/kreafik/repos?per_page=100\")\n\t\t\t.then(res => {\n\t\t\t\tlet data = res.data.sort((a, b) => {\n\t\t\t\t\tlet x = a.stargazers_count;\n\t\t\t\t\tlet y = b.stargazers_count;\n\t\t\t\t\treturn x > y ? -1 : x < y ? 1 : 0;\n\t\t\t\t});\n\t\t\t\tlet response = \"\";\n\t\t\t\tlet base = [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Name\",\n\t\t\t\t\t\tdescription: \"Description\",\n\t\t\t\t\t\turl: \"Url\",\n\t\t\t\t\t\tstars: \"Stars\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\tdescription: \"\",\n\t\t\t\t\t\turl: \"\",\n\t\t\t\t\t\tstars: \"\",\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t\tlet mappedData = [\n\t\t\t\t\t...base,\n\t\t\t\t\t...data.map(item => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\t\tdescription: item.description,\n\t\t\t\t\t\t\turl: item.html_url,\n\t\t\t\t\t\t\tstars: item.stargazers_count,\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t];\n\t\t\t\tlet spaceList = getSpaces(mappedData);\n\t\t\t\tmappedData.forEach((item, idx) => {\n\t\t\t\t\tresponse += `<span class=\"${\n\t\t\t\t\t\tidx !== 0 && `style2`\n\t\t\t\t\t}\"><a target=\"_blank\" href=\"${item.url}\">${\n\t\t\t\t\t\titem.name\n\t\t\t\t\t}</a></span>${spaceList[idx]}<span class=\"${\n\t\t\t\t\t\tidx !== 0 && `style5`\n\t\t\t\t\t}\">${\n\t\t\t\t\t\titem.stars === 0 ? \"-\" : item.stars\n\t\t\t\t\t}</span>\\t<span class=\"${idx !== 0 && `style4`}\">${\n\t\t\t\t\t\titem.description ? item.description : \"\"\n\t\t\t\t\t}</span>\\n`;\n\t\t\t\t});\n\t\t\t\tsetData(response);\n\t\t\t});\n\t}, []);\n\treturn (\n\t\t<BodyContent>\n\t\t\t<Wrapper>\n\t\t\t\t<pre\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: data,\n\t\t\t\t\t}}\n\t\t\t\t></pre>\n\t\t\t</Wrapper>\n\t\t</BodyContent>\n\t);\n};\n\nexport default GitContent;\n","import React from \"react\";\n// eslint-disable-next-line\nimport styled from \"styled-components\";\nimport theme from \"@styles/theme\";\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tmax-width: 100%;\n\tmin-height: 32rem;\n\theight: 100%;\n\tborder-radius: 0 0 0.3rem 0.3rem;\n\tborder: 1px solid ${theme.bodyBorder};\n`;\n\nconst BodyContent = props => {\n\treturn <Wrapper>{props.children}</Wrapper>;\n};\n\nexport default BodyContent;\n"],"sourceRoot":""}